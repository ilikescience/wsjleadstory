include icon
include cardAction
include headline
include media

mixin card(inputData, params)
    -
        var data = Object.assign({
            colorTheme: 'standard',
            alignment: 'left',
            size: 'm',
            columns: 1,
            rows: 1,
            orientation: 'vertical',
            mediaPlacement: 'first',
            mediaRatio: 1.5,
            actions: true,
            commentCount: Math.floor(Math.random() * 100),
            storyType : 'News',
            trending : false,
            ornament: false,
            media: false,
            mediaType: 'image',
            headlinePosition: 'bottom',
            borders: { bottom: 'light' },
            bullets: false
            }, inputData, params)
        var now = new Date().getTime();
        var timestamp = '';
        if (now - data.timestamp < 3600000) {
            timestamp = `${Math.round((now - data.timestamp) / 60000)} mins ago`;
        }
        var borderClass = '';
        for (const border in data.borders) {
            borderClass += `l--border-${border}-${data.borders[border]} `
        }
    .card(
        class=`
            card--theme-${data.colorTheme}
            card--${data.size}
            card--${data.orientation}
            card--placement-${data.mediaPlacement}
            card--${data.actions ? 'has-actions' : 'no-actions'}
            l--grid-col-span-${data.columns}
            l--grid-row-span-${data.rows}
            ${borderClass}
            ${data.alignment === 'center' ? 'card--text-center' : 'card--text-left' }
            ${data.mediaPlacement === 'behind' ? 'card--inset' : '' }`
         style=`
                ${data.mediaPlacement === 'behind' ? `
                    background-image:url(${data.media});
                    padding-top: calc((1 / ${data.mediaRatio}) * 100%)` 
                    : ``
                }`
        data-sbid=data.id
    )
        .card--content
            .card--text(class=`
                ${data.mediaPlacement === 'behind' ? 'card--text-inset' : ''}
                card--text-${data.headlinePosition}`
            )
                +headline(data)
                if data.summary
                    .card--summary.t--family-serif.t--size-s.l--margin-bottom-s #{data.summary}
                if data.byline || timestamp
                    .card--byline.t--family-sansCondensed.t--size-s.t--weight-light
                        if data.byline
                            if data.avatar
                                .card--byline-avatar
                                    img(src=data.avatar)
                            .card--byline-attribution by #{data.byline}
                if data.trending
                    .card--trending.t--family-sansCondensed.t--color-green-light.l--margin-top-s.t--size-xs
                        .card--trending-icon
                            +icon('trending')
                        .card--trending-label.l--margin-left-s Trending
                if data.bullets.length > 0
                    ul.card--bullets
                        each item, index in data.bullets
                            +card({
                                title: item.title,
                                actions: false,
                                size: 's',
                                media: false,
                                bullets: false,
                                byline: false,
                                timestamp: false,
                                summary: false,
                                borders: {
                                    top: index === 0 ? 'light' : false,
                                    bottom: index === (data.bullets.length - 1) ? false : 'light'
                                }
                            })
                if data.media && ['left', 'right', 'middle'].includes(data.mediaPlacement)
                    +media(data)
                if data.actions
                    .card--footer
                        if timestamp 
                            .card--timestamp.t--family-sansCondensed #{timestamp}
                        +cardAction()
                        +cardAction({icon: 'share'})
                        +cardAction({icon: 'comments', label: data.commentCount})
            if data.media && ['first', 'last', 'behind'].includes(data.mediaPlacement)
                +media(data)

